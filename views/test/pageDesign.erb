<!DOCTYPE html>
<html>
<head>
<title>PageDesign Mockup</title>

<%= asset_link("jquery.js", "application.js") %>
<%= asset_link("gradients.js") %>
<%= asset_link("jquery.hammer.js") %>
<%= asset_link("jquery.dataSelector.js") %>
<%= asset_link("jquery.transit.js") %>
<%= asset_link("bootstrap") %>
<%= asset_link("application.css") %>
<link href='/css/editor.css' rel='stylesheet' type='text/css' />
<script src="/js/editor.pb.js"></script>
<script src="/js/editor.pb.book.js"></script>
<script src="/js/editor.pb.page.js"></script>
<script src="/js/editor.pb.photos.js"></script>
<script src="/js/editor.gui.js"></script>
<%= asset_link("editor.gui.rect.js") %>
<script src="/js/editor.gui.events.js"></script>
<%= asset_link("editor.gui.commands.js") %>
<%= asset_link("editor.gui.popup.js") %>
<%= asset_link("editor.gui.manipulators.js") %>
<%= asset_link("editor.pb.themecache.js") %>
<%= asset_link("editor.pb.themeutils.js") %>
<%= asset_link("editor.gui.dnd.js") %>
<%= asset_link("editor.pb.page.editable.js") %>
<%= asset_link("editor.pb.page.commands.js") %>

<style type="text/css">
* {
	-moz-user-select: none;
	-webkit-user-select: none;
	-ms-user-select: none;
}
#tools {
	position: fixed;
	top: 0;
	right: 0px;
	background-color: rgba(255,255,255, 0.7);
	border-width: 0 0 1px 1px;
	border-color: #DDD;
	border-style: solid;
	padding: 8px;
}
.sizePick {
	position: relative;
	border: 1px solid black;
	background-color: #CCC;
	text-align: center;
	padding-top: 16px;
}
#sizePickerContainer {
	vertical-align: top;
	line-height: 80px;
}
#sizePicker {
	display:inline-block;
}
#sizePicker li {
	display: inline-block;
	list-style-type: none;
	margin: 8px;
	vertical-align: bottom;
}
#themePicker li {
	display: inline-block;
	list-style-type: none;

}
#themePicker li img {
	height: 100px;
}
#themePicker li p {
	text-align: center;
}
#backgroundPicker {
	display:none;
	overflow: auto;
	max-height: 160px;
}
#backgroundPicker li {
	display: inline-block;
	list-style-type: none;
}
#designPicker {
	overflow: auto;
}
#designPicker li {
	display: inline-block;
	list-style-type: none;
	margin-left: 10px;
}
#componentPicker {
}
#componentPicker > div {
	display: inline-block;
}
#photoPicker {

}
#photoPicker > div {
	display: inline-block;
}
#layoutPicker {
	overflow: auto;
	display: none;
}
#layoutPicker li {
	display: inline-block;
	list-style-type: none;
	margin-left: 10px;
}
#framePicker {
	display:none;
}
#framePicker li {
	position: relative;
	display: inline-block;
	list-style-type: none;
	margin: 8px;
}
#framePicker li img {
	position: absolute;
}
.design-book-page-left {
	transform: scale(1.0);
	-webkit-transform: scale(1.0);
}
#pagePopupContainer {
	position:relative;
}

#pagePopupContainer ul {
	right: 0;
	left: auto;
}
</style>
<script type="text/javascript">

var BlankPage = {
	width: 512,
	height: 512,
	assets: [],
	assetData: {},
	backgroundId: null,
	backgroundData: null,
	layoutId: null,
	layoutData: null,
	hasLayout: false
}

var book = PB.Book.blank();
var currentPage = book.addPage(-1);

var Controller = {
	init: function() {
		var THIS = this;
		PB.ServerPhotoCache.get(600);
		PB.ServerPhotoCache.get(591);
		PB.ServerPhotoCache.get(601);
		$.when(
			PB.ThemeCache.load('/t/admin@core/theme.js'),
			PB.ThemeCache.load('/t/admin@sample/theme.js'),
			PB.ThemeCache.load('/t/admin@rotate/theme.js'),
			PB.ThemeCache.load('/t/admin@modern_full/theme.js'),
			PB.ThemeCache.load('/t/admin@sports/theme.js')
			)
			.done( function() {
				new PB.TemplatePhoto.create( {
					id: 'admin@sample/small_soccer',
					originalUrl:  '/t/admin@sample/soccer_small.svg',
					width: 397,
					height: 266
				});
				THIS.initThemePicker();
				THIS.initSizePicker();
				THIS.initBackPicker();
				THIS.setDimensions(768, 512);
				THIS.setDesign('theme://admin@sports/designs/basketballDesign1');
				var p1id = currentPage.addAsset( {
					type:'photo',
					photoId: 600
				});
				var p2id = currentPage.addAsset( {
					type:'photo',
					photoId: 591
				});
				var p3id = currentPage.addAsset( {
					type:'photo',
					photoId: 601
				});
				// currentPage.addAsset({
				// 	type: 'text',
				// 	content: 'Oliver',
				// 	dependentOf: {
				// 		assetId: p1id
				// 	}
				// });
				// currentPage.addAsset({
				// 	type: 'text',
				// 	content: 'Jackie',
				// 	dependentOf: {
				// 		assetId: p2id
				// 	}
				// });
				// THIS.addPhoto();
				// THIS.addText("Very big text\nHas a newline too!")
				// THIS.setBackground('theme://admin@sports/backgrounds/soccerField');
				THIS.showPage();
				THIS.updateFramePicker();
				THIS.initPhotoPicker();
				testCanvas();
			})
			.fail( function() {
				console.error("Themes failed to load");
			});
	},
	initSizePicker: function() {
		var sizes = [
			{ width: 7, height: 5},
			{ width: 4, height: 4 },
			{ width: 8, height: 8 },
			{ width: 12, height: 12},
			{ width: 11, height: 8 }
		];
		function assignCb($el, size) {
			$el.hammer().on('touch', {}, function() {
				Controller.setDimensions(size.width * 96, size.height * 96);
				Controller.updateLayoutPicker();
			});
		};

		var $picker = $('#sizePicker');
		var inchToPixel = 6;
		sizes.forEach(function(size) {
			$li = $('<li>');
			$div = $('<div>')
				.addClass('sizePick')
				.css( { width: size.width * inchToPixel,
					height: size.height * inchToPixel})
				.text(size.width + " X " + size.height);
			$li.append($div);
			$picker.append($li);
			assignCb( $li, size );
		});
	},
	initThemePicker: function() {
		var themeIds = ['admin@sports'];
		function assignCb( $el, themeId ) {
			$el.hammer().on('touch', {}, function() {
				Controller.updateDesignPicker( themeId );
			});
		};
		var themesLoading = false;

		themeIds.forEach( function( id) {
			try {
				PB.ThemeCache.get( id, {autoload: true} );
			}
			catch(ex) {
				if (!themesLoading) {
					window.setTimeout( Controller.initThemePicker, 0);
					themesLoading = true;
				}
			}
		});

		if (themesLoading)
			return;

		var $picker = $('#themePicker');
		themeIds.forEach( function( id) {
			var theme = PB.ThemeCache.get(id, '');
			$li = $('<li>');
			$li.append( $('<img>').prop('src', theme.screenshots[0]));
			$li.append( $('<p>').text( theme.title ));
			$picker.append($li);
			assignCb( $li, id );
		});
	},
	updateDesignPicker: function( themeId ) {
		var theme = PB.ThemeCache.get(themeId);

		function assignCb($el, designId) {
			$el.hammer().on('touch', {}, function() {
				Controller.setDesign(designId);
			});
		};
		$('#designPicker').children().remove();
		for (design in theme.designs) {
			var designId = 'theme://' + themeId + "/designs/" + design;
			var icon = PB.ThemeUtils.getDesignIcon( currentPage, 128, {designId: designId }
			);
			var $li = $(document.createElement('li'))
				.addClass('pb-draggable');
			$li.append(icon);
			$('#designPicker').append($li);
//			assignCb($li, designId)
		}
		Controller.updateComponentPicker( themeId, currentPage);
	},
	initBackPicker: function() {
		var backs = [
		{ id: 'theme://admin@core/backgrounds/cssBackground',
			name: 'Default'
		},
		{ id: 'theme://admin@core/backgrounds/cssBackground',
			name: 'Yellow',
			data: {
				css: {backgroundColor: 'yellow'}
			}
		},
		{ id: 'theme://admin@core/backgrounds/cssBackground',
			name: 'Rainbow',
			data: {
				css: {background: 'linear-gradient(red, yellow, orange, green, blue, purple)'}
			}
		},
		{ id: 'theme://admin@sports/backgrounds/soccerField' },
		{ id: 'theme://admin@sports/backgrounds/soccerStadium' }

		];
		function assignCb($el, id, data) {
			$el.hammer().on('touch', {}, function() {
				Controller.setBackground(id, data);
			});
		}
		for (var i=0; i<backs.length; i++) {
			var b = PB.ThemeCache.resource(backs[i].id);
			var $li = $('<li>').css({
				width: 100,
				height: 100
			});
			b.fillBackground($li, backs[i].data, {resolution: PB.PhotoProxy.SMALL});
			$('#backgroundPicker').append($li);
			assignCb($li, backs[i].id, backs[i].data);
		};
	},
	updateLayoutPicker: function() {
		Controller.updateDesignPicker(
			PB.ThemeCache.themeIdFromUrl( currentPage.designId ));

		$('#layoutPicker').children().remove();
		var layouts = [
		{ id: 'theme://admin@core/layouts/gridLayout',
		}
		,{ id: 'theme://admin@core/layouts/gridSpacedLayout',
			data:  {spaceOffset: 10}
		}
		,{ id: 'theme://admin@sample/layouts/framedLayout',
			data:  {frameWidth: 10}
		},
		{ id: 'theme://admin@modern_full/layouts/horizontalLayout' },
		{ id: 'theme://admin@modern_full/layouts/verticalLayout' },
		{ id: 'theme://admin@rotate/layouts/horizontalLayout' }


		];
		function assignCb($el, id, data) {
			$el.hammer().on('touch', {}, function() {
				Controller.setLayout(id, data);
				Controller.showPage();
			});
		};
		for (var i=0; i<layouts.length; i++) {
			var icon = PB.ThemeUtils.getDesignIcon( currentPage, 96,
				{
					layoutId: layouts[i].id,
					layoutData: layouts[i].data
				});
			var $li = $(document.createElement('li'));
			$li.append(icon);
			$('#layoutPicker').append($li);
			assignCb($li, layouts[i].id, layouts[i].data);
		}
	},
	updateFramePicker: function() {
		$('#framePicker').children().remove();
		var frames = [
		{ 	id: 'theme://admin@core/frames/cssFrame',
			data: {
				css: {
					boxShadow: '5px 5px 5px rgba(0,0,0,0.3)'
				},
				inset: [10, 10, 10, 10]
			}
		},
		{ 	id: 'theme://admin@core/frames/cssFrame',
			data: {
				css: {
					backgroundColor: 'blue',
					borderRadius: 10,
					overflow: 'hidden'
				},
				inset: [10, 10, 10, 10]
			}
		},
		{ 	id: 'theme://admin@core/frames/cssFrame',
			data: {
				css: {
					backgroundColor: 'blue',
				},
				inset: [10, 10, 10, 10]
			}
		},
		{ 	id: 'theme://admin@core/frames/cssFrame',
			data: {
				css: {
					background: 'linear-gradient(red, yellow, orange, green, blue, purple)'
				},
				inset: [5, 3, 10, 20]
			}
		},
		{ 	id: 'theme://admin@core/frames/cssFrame',
			data: {
				css: {
					backgroundColor: '#9400d3',
					boxShadow: '5px 5px 5px rgba(148,0,211,0.3)'
				},
				inset: [2, 2, 2, 2]
			}
		}
		];
		var ICON_WIDTH = 50;
		var ICON_HEIGHT = 50;

		function assignCb($el, frameId, frameData) {
			$el.hammer().on('touch', {}, function() {
				PB.Page.Selection.forEach(function(page, itemId) {
					var asset = page.getAsset(itemId);
					asset.frameId = frameId;
					asset.frameData = frameData;
					page.updateAsset(itemId, asset, {clobber: true});
				});
			});
		};

		for (var i=0; i<frames.length; i++) {
			var f = PB.ThemeCache.resource(frames[i].id);
			var $li = $('<li>');

			var $frameDiv = $('<div>').css({
				width: ICON_WIDTH,
				height: ICON_HEIGHT
			});
			f.fillFrame($frameDiv, frames[i].data, {} );

			var inset = frames[i].data.inset;
			var imgRect = new GUI.Rect({width: ICON_WIDTH, height: ICON_HEIGHT});
			imgRect = imgRect.inset(inset);
			$img = $('<img>');
			$img.attr('src', PB.FillerPhotos.randomH(0).url)
				.css({
					top: imgRect.top,
					left: imgRect.left,
					width: Math.max(10, imgRect.width),
					height: Math.max(10, imgRect.height)
				});
			$li.append($frameDiv);
			$li.append($img);
			$('#framePicker').append($li);
			assignCb($li, frames[i].id, frames[i].data);
		}
	},
	initPhotoPicker: function() {
		var photoIds = [590,591,592,593,594,595,600, 601, 602];
		function makePhoto(id) {
			var photo = PB.ServerPhotoCache.get( id);
			var iconRec = photo.iconUrl;
			var $img = $('<img>').prop('src', iconRec.url).css('height', 96);
			photo.addListener( function(prop) {
				if (prop == 'icon_url') {
					$img.prop('src', photo.iconUrl.url);
				}
			});
			var dragOptions = $.extend( {},
				PB.Page.Editor.DraggableOptions.Photo,
				{ photoId: id}
			);
			$img.addClass('pb-draggable')
				.data('pb-draggable', new GUI.Dnd.Draggable( dragOptions ));
			GUI.Dnd.Util.preventDefaultDrag($img);
			$('#photoPicker').append($img);
		}
		photoIds.forEach( makePhoto );
	},
	updateComponentPicker: function(themeId, page) {
		var theme = PB.ThemeCache.get(themeId);
		var dimensions = page.dimensions;
		var whRatio = dimensions.width / dimensions.height;
		var tileHeight = 96;
		function getDesignTiles() {
			var retVal = [];
			for (x in theme.designs) {
				var designId = 'theme://' + themeId + "/designs/" + x;
				var $icon = $(PB.ThemeUtils.getDesignIcon( currentPage, 96, {designId: designId }
				));
				var designOptions = $.extend( {},
					PB.Page.Editor.DraggableOptions.Design,
					{designId: designId});
				$icon.addClass('pb-draggable')
					.data('pb-draggable', new GUI.Dnd.Draggable( designOptions));
					GUI.Dnd.Util.preventDefaultDrag($icon);
				retVal.push($icon);
		//			assignCb($li, designId)
			}
			return retVal;
		};
		function getBackgroundTiles() {
			var retVal = [];
			for (var x in theme.backgrounds) {
				var $div = $('<div>').css({
					width: tileHeight * whRatio,
					height: tileHeight
				});
				theme.backgrounds[x].fillBackground($div, null, {resolution: PB.PhotoProxy.SMALL});
				var dragOptions = $.extend( {},
					PB.Page.Editor.DraggableOptions.Background,
					{ backgroundId: 'theme://' + themeId + '/backgrounds/' + x
					});
				$div.addClass('pb-draggable')
					.data('pb-draggable', new GUI.Dnd.Draggable( dragOptions ));
				retVal.push($div);
			}
			return retVal;
		};
		function getLayoutTiles() {
			// TODO eliminate duplicates
			var retVal = [];
			for (var x in theme.designs) {
				var icon = PB.ThemeUtils.getDesignIcon( page, tileHeight,
					{
						designId: 'theme://' + themeId + '/designs/' + x,
						layoutOnly: true
					});
				var dragOptions = $.extend( {},
					PB.Page.Editor.DraggableOptions.Layout,
					{ layoutId: 'theme://' + themeId + '/designs/' + x }
				);
				var $div = $('<div>').append(icon);
				$div.addClass('pb-draggable')
					.data('pb-draggable', new GUI.Dnd.Draggable( dragOptions));
				retVal.push( $div );
			};
			return retVal;
		};
		function getWidgetTiles() {
			var retVal = [];
			for (var x in theme.widgets) {
				var maxWidth = tileHeight * 2;
				var width = theme.widgets[x].width();
				var height = theme.widgets[x].height();
				var r = tileHeight / height;
				var r2 = maxWidth / width;
				r = Math.min( r, r2);
				if (r < 1 ) {
					width *= r; height *=r;
				}
				var tile = theme.widgets[x].generateDom(
					width, height, {}, {resolution: PB.PhotoProxy.SMALL });
				tile.css({
				 	verticalAlign: 'baseline'
				 });
				var dragOptions = $.extend( {},
					PB.Page.Editor.DraggableOptions.Widget,
					{ widgetId: 'theme://' + themeId + '/widgets/' + x }
					);
				var $div = $('<div>').append(tile);
				$div.addClass('pb-draggable')
					.data('pb-draggable', new GUI.Dnd.Draggable( dragOptions ))
					.css('background', 'transparent');
				GUI.Dnd.Util.preventDefaultDrag($div);
				retVal.push($div);
			}
			return retVal;
		};
		function getFrameTiles() {
			var retVal = [];
			for (var x in theme.frames) {
				var tileWidth = tileHeight * 3 / 4;
				var $frameDiv = $('<div>').css({
					width: tileWidth,
					height: tileHeight,
					position: 'relative'
				});
				theme.frames[x].fillFrame( $frameDiv,
					{},
					{ resolution: PB.PhotoProxy.SMALL }
				);
				var imgRect = GUI.Rect.create(
					{ width: tileWidth, height: tileHeight })
					.inset( theme.frames[x].getInset() );
				$frameDiv.append( $('<div>').css(
					{
						top: imgRect.top,
						left: imgRect.left,
						width: imgRect.width,
						height: imgRect.height,
						position: 'relative',
						backgroundColor: 'white'
					}
					));
				var frameOptions = $.extend({},
					PB.Page.Editor.DraggableOptions.Frame,
					{ frameId: 'theme://' + themeId + '/frames/' + x});
				$frameDiv.addClass('pb-draggable')
					.data('pb-draggable', new GUI.Dnd.Draggable( frameOptions ));
				retVal.push($frameDiv);
			}
			return retVal;
		};
		var picker = $('#componentPicker');
		picker.children().remove();
		var tiles = [].concat(
			getDesignTiles(),
			getBackgroundTiles(),
			getLayoutTiles(),
			getWidgetTiles(),
			getFrameTiles()
			);
		tiles.forEach( function( tile ) {
			picker.append(tile);
		});
	},
	setDesignMode: function(mode) {
		switch(mode) {
			case 'design':
				$('#designModeButton').addClass('active');
				$('#partModeButton').removeClass('active');
				$('#componentPicker').hide();
				$('#designPicker').show();
			break;
			case 'parts':
				$('#designModeButton').removeClass('active');
				$('#partModeButton').addClass('active');
				$('#componentPicker').show();
				$('#designPicker').hide();
			break;
			default:
				console.error('unknown mode', mode);
		};
	},
	updateSelectionMenu: function(sel) {
		$('#pagePopupContainer').empty();
		if (this.popupCommandSet)
			this.popupCommandSet.deactivate();
		this.popupCommandSet = sel.commandSet;
		if (!this.popupCommandSet) {
			$('#pagePopupContainer').hide();
			return;
		}
		this.popupCommandSet.activate();
		var $ul = $('<ul>').addClass('pb-popup-menu').addClass('pbopen');
		$('#pagePopupContainer').show().append($ul);
		var THIS = this;
		this.popupCommandSet.getCommands().forEach( function(cmd) {
			var $li = $('<li>');
			$ul.append($li);
			var $a = $('<span>');
			$a.text( cmd.title );
			if ( cmd.icon )
				$a.prepend( $('<i>').addClass('icon-' + cmd.icon));
			$li.append($a);
			$li.on('mousedown touchstart', function() {
				cmd.action( sel.dom, sel.selection[0]);
			});
		});
	},
	showPage: function() {
		var options = {
			editable: $('#editable').prop('checked'),
			syncable: $('#syncable').prop('checked')
		};
		var $dom = currentPage.generateDom(options);

		var sel = PB.Page.Selection.findClosest($dom);
		var THIS = this;
		sel.addListener( function() {
			THIS.updateSelectionMenu(sel);
		});
		$('.design-book-page-left').children().remove();
		$('.design-book-page-left').append($dom);
		this.updateLayoutPicker();
	},
	addPhoto: function() {
		currentPage.addAsset( {
			type: 'photo',
			photoId: PB.FillerPhotos.random().id
		});
		this.updateLayoutPicker();
	},
	removePhoto: function() {
		PB.Page.Selection.getActiveSelections().forEach(function(pageSel) {
			pageSel.selection.forEach(function(itemId) {
				pageSel.bookPage.removeAsset(itemId);
			});
			pageSel.setSelection();
		});
		this.updateLayoutPicker();
	},
	words: ["one", "two", "and a much longer three, how much longer i am not sure"],
	addText: function(text) {
		var word = text;
		if (word === undefined) {
			word = this.words.shift();
			this.words.push(word);
		}
		currentPage.addAsset( {
			type:'text',
			content: text
		});
		this.updateLayoutPicker();
	},
	addWidget: function() {
		currentPage.addAsset( {
			type: 'widget',
			widgetId: 'theme://admin@sports/widgets/soccerSilhouetteWidget'
		});
	},
	setDesign: function( designId ) {
		currentPage.setDesign( designId );
	},
	setLayout: function(layoutId, layoutData) {
		currentPage.setLayout(layoutId, layoutData);
	},
	setBackground: function(backgroundId, backgroundData) {
		currentPage.setBackground(backgroundId, backgroundData);
	},
	setDesign: function(designId) {
		currentPage.setDesign( designId );
	},
	setDimensions: function(width, height) {
		book.setDimensions( { width: width, height: height} );
	}
}

function testCanvas() {
	// 	<img id='i1' src='/t/admin@sports/basketball_ball.svg' width='96px' height='114px'>
	// <img id='i2' src='/t/admin@core/h6.png' width='130px' height='100px'>
	// <canvas id='testCanvas' width='200px' height='200px' style='background-image:url("/t/admin@sports/basketball_court_back.jpg");background-size: 100% 100%'></canvas>

	// window.setTimeout(testCanvas2, 1000);
}
function testCanvas2() {
	var canvas = document.getElementById('testCanvas');
	var context = canvas.getContext('2d');
	context.drawImage(document.getElementById('i2'), 50,50,130, 100);
	context.drawImage(document.getElementById('i1'), 0,0,96, 114);
	var c2 = document.createElement('canvas');
	c2.width = 200;
	c2.height = 200;
//	var c2 = document.getElementById('test2');
	var context2 = c2.getContext('2d');
	context2.drawImage(canvas, 0,0,200,200);
	context2.drawImage($('canvas').get(3),0,0,200,200);
	$(canvas).after(c2);
	var x = GUI.Util.cloneDomWithCanvas(canvas);
	$(canvas).after(c2);
};

$(document).ready(function() {
	Controller.init();
	GUI.CommandManager.init();
	Controller.setDesignMode('parts');
	$('#designModeButton').hammer().on('touch', {}, function() {
		Controller.setDesignMode('design');
	});
	$('#partModeButton').hammer().on('touch', {}, function() {
		Controller.setDesignMode('parts');
	});
	$(document).on('click', function(ev) {
		if (ev.target.nodeName == 'BODY' || ev.target.nodeName == 'HTML')
			PB.Page.Selection.getActiveSelections().forEach( function( sel ) {
				sel.setSelection();
			});
	});
});
</script>
<body>
	<div id='tools'>
		<label for='editable'>Editable <input type='checkbox' id='editable' checked onClick='Controller.showPage()'/></label>
		<label for='syncable'>syncable <input type='checkbox' id='syncable' checked onClick='Controller.showPage()'/></label>
		<button onclick="Controller.addPhoto()">Add photo</button><br>
		<button onclick="Controller.removePhoto()">Remove</button><br>
		<button onclick="Controller.addText()">Add text</button><br>
		<button onclick="Controller.addWidget()">Add widget</button>
	</div>
	<div id='sizePickerContainer'>What size would you like your book to be?
	<ul id='sizePicker'>
	</ul>
	</div>
	<p>And theme? You can mix in other themes later.</p>
	<ul id='themePicker'>
	</ul>
	<p></p>
		<div class="btn-group">
		  <button id='designModeButton' class="btn">Designs</button>
		  <button id='partModeButton' class="btn">Parts</button>
		</div>
	<ul id='designPicker'>
	</ul>
	<ul id='componentPicker'>
	</ul>
	<ul id='photoPicker'>
	</ul>
	<!--
	<p>Layouts:</p>
	<ul id='layoutPicker'>
	</ul>
	<p>Backgrounds:</p>
	<ul id='backgroundPicker'>
	</ul>
	<p>Frames</p>
	<ul id='framePicker'>
	</ul>
	-->
	<div id='pagePopupContainer'></div>
	<div class='design-book-page-left' ></div>
</body>
