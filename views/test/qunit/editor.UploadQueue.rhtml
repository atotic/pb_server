<script>
$(document).ready(function(){

module("PB.UploadQueue");

var uploadQueue = new PB.UploadQueue("test");

var logFilter = new PB.DeferredFilter( {
	ready: function() { return true;},
	jobStarted: function(job) { console.log("jobStarted: " + job.uniqueId) },
	jobCompleted: function(job) { console.log("jobCompleted: " + job.uniqueId)}
});

uploadQueue._filters.push(logFilter);

test("upload 10, immediate completion", function() 
{
	for (var i=0; i<10; i++) {
		uploadQueue.upload({
			createUploadDeferred: function() {
				var job = $.Deferred();
				job.resolve();
				return job;
			}
		});
	}
});

asyncTest("upload 10, delayed completion", function() 
{
	for (var i=0; i<9; i++) {
		uploadQueue.upload({
			createUploadDeferred: function() {
				var job = $.Deferred();
				window.setTimeout(function() {
					job.resolve();
				}, 100);
				return job;
			}
		});
	}
	uploadQueue.upload({
		createUploadDeferred: function() {
			var job = $.Deferred();
			window.setTimeout(function() {
				job.resolve();
				start();
			}, 100);
			return job;
		}
	});
});

asyncTest("upload 3, 2nd needs retry", function() {
	var done = new Array(3);
	uploadQueue.upload({
		createUploadDeferred: function() {
			var job = $.Deferred();
			window.setTimeout(function() {
				job.resolve();
				done[0] = true;
				console.log("1st upload complete");
			}, 100);
			return job;
		}
	});
	var	retryCount = 0;
	uploadQueue.upload({
		createUploadDeferred: function() {
			var job = $.Deferred();
			var THIS = this;
			window.setTimeout(function() {
				if (++retryCount < 2) {
					job.reject();
					console.log("Retrying");
				}
				else {
					console.log("2nd upload complete");
					done[1] = true;
					equal(done[2], undefined, "3rd test did not complete before 2nd");
					job.resolve();
				}
			}, 100);
			return job;
		}
	});
	uploadQueue.upload({
		createUploadDeferred: function() {
			var job = $.Deferred();
			window.setTimeout(function() {
				job.resolve();
				done[2] = true;
				console.log("3rd upload complete");
				ok( done[0] & done[1] & done[2], "All 3 items uploaded successfully");
				start();
			}, 100);
			return job;
		}
	});
});

});


</script>
