<!DOCTYPE html>
<html>
<head>
	<title>Test: Image Edit</title>
	<%= asset_link("jquery.js", "jquery-ui.js", "application.js", "editor.js", "editor.model.js") %>
	<%= asset_link("jquery-ui.css", "application.css") %>
<style type="text/css">
#main-container {
	position: relative;
	background-color: #EEE;
	width: 100%;
	overflow: hidden;
}
.page-enclosure {
	border: 1px solid gray;
	box-shadow: 0 0 5px gray;
}
.book-page {
	display:block;
	position:relative;
	overflow:hidden;
}
.book-page * {
	position: absolute;  /* book page elements are absolutely positioned by default */
}
.book-image {
	background-color:gray;
	overflow:hidden;
}
.image-button {
	position: relative;
	border: 1px none;
	border-radius: 2px;
	background-color: #D5D5D5;
	z-index: 1;
}
</style>
</head>
<body>
<%= erb :'layout/header_bar' %>

<div class="page-enclosure" style="position: relative; width: 432px; height: 432px;">
<div class="book-page" style="width: 432px; height: 432px;">
	<div class="book-image" style="width: 216px; height: 144px; top: 20px; left: 20px;" data-align="end">
		<img class="actual-image" style="position: absolute; height: 144px; width: 192px; top: 0px; left: 24px;" src="/photo/3?size=display">
	</div>
	<div class="book-image" style="width: 144px; height: 216px; top: 20px; left: 252px;" data-align="end">
		<img class="actual-image" style="position: relative; height: 192px; width: 144px; top: 24px; left: 0px;" src="/photo/5?size=display">
	</div>
<div style="position: absolute; left: 10px; top: 300px;"> Photos </div>
</div>
</div>
<script type="text/javascript">
	
	function createButtons(imageDiv) {
		var butHtml = '<button class="image-button pan">pan</button>\
		<button class="image-button move">move</button>\
		<button class="image-button zoom">zoom</button>\
		<button class="image-button rotate">rotate</button>';
		$(butHtml).appendTo(imageDiv);
		var showHideEvents = {
			mouseenter: function(ev) {
				$(ev.currentTarget).find(".image-button").show();
			},
			mouseleave: function(ev) {
				$(ev.currentTarget).find(".image-button").hide();				
			}
		}
		imageDiv.bind(showHideEvents);
	}

	function setupButtons(imageDiv) {
	// Draw the buttons
		imageDiv = $(imageDiv);
		createButtons(imageDiv);
		imageDiv.find(".pan").css("cursor", "all-scroll");
		imageDiv.find(".move").css("cursor", "move");
		imageDiv.find(".zoom").css("cursor", 'row-resize');
		var panBut = imageDiv.find(".zoom");
// Pan moves image within bounds
		var docEvents = {
			mousemove: function(ev) {
				var moveX = ev.pageX - docEvents.data.mouseStartX;
				var moveY = ev.pageY - docEvents.data.mouseStartY;
/*				// pan
				docEvents.data.image.css("top",(docEvents.data.imageTop + moveY) + "px");
				docEvents.data.image.css("left",(docEvents.data.imageLeft + moveX) + "px");
				// move
//				docEvents.data.imageDiv.css("top", (docEvents.data.imageDivTop + moveY) + "px");
//				docEvents.data.imageDiv.css("left", (docEvents.data.imageDivLeft + moveX) + "px");
				// zoom
					var	top = docEvents.data.imageTop + moveY;
					var	height = docEvents.data.imageHeight - moveY * 2;
					var	xdelta = moveY * docEvents.data.imageWidth / docEvents.data.imageHeight;
					var	left = docEvents.data.imageLeft + xdelta;
					var	width = docEvents.data.imageWidth - xdelta * 2;
					docEvents.data.image.css({
						top: top + "px",
						left: left + "px",
						height: height + "px",
						width: width + "px"
				});
*/			

				// Rotate
		// compute in screen coordinates
				// compute angle, pythagora
				var b = docEvents.data.centerY - ev.pageY;
				var a = ev.pageX - docEvents.data.centerX;
				var c = Math.sqrt(a*a+b*b);
				var angle = Math.asin(b / c);
				if (a < 0)
					angle = Math.PI / 2 + ( Math.PI / 2 - angle);
				angle = -angle;
				docEvents.data.imageDiv.mozcss("transform", "rotate(" + angle + "rad)");
			},
			mouseup: function(ev) {
				console.log("mouseup");
				$(document).unbind("mousemove", docEvents.mousemove);
				$(document).unbind("mouseup", docEvents.mouseup);
			}
		};
		var buttonEvents = {
				mousedown: function(ev) {
					console.log("mousedown");
					imageDiv.mouseleave();
					var image = imageDiv.find(".actual-image").get(0);
					var originalAngle = 0;
					var transform = imageDiv.get(0).style.transform;
					if (transform) {
						var match = transform.match(/.*rotate\(([^)]+)\)/);
						if (match.length == 1)
							originalAngle = parseFloat(match[1]) || 0;
					}
					docEvents.data = {
						mouseStartX: ev.pageX,
						mouseStartY:ev.pageY,
						image: $(image),
						imageTop: parseFloat(image.style.top),
						imageLeft: parseFloat(image.style.left),
						imageWidth: parseFloat(image.style.width),
						imageHeight: parseFloat(image.style.height),
						centerX: ev.pageX - 50, // TODO these should be based upon position within image
						centerY: ev.pageY,
						originalAngle: originalAngle,
						imageDiv: imageDiv,
						imageDivTop: parseFloat(imageDiv.css("top")),
						imageDivLeft: parseFloat(imageDiv.css("left")),
						imageDivWidth: parseFloat(imageDiv.css("width")),
						imageDivHeight: parseFloat(imageDiv.css("height"))
					};
					ev.preventDefault();
					$(document).bind(docEvents);
				}
		};
		panBut.bind(buttonEvents);
	}
	$(document).ready(function() {
		$(".book-image").each(function(index, el) {
			setupButtons(el);
		});
	});
</script>

