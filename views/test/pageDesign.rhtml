<html>
<head>
<title>PageDesign Mockup</title>

<%= asset_link("jquery.js", "application.js") %>
<%= asset_link("gradients.js") %>
<%= asset_link("jquery.hammer.js") %>
<%= asset_link("jquery.dataSelector.js") %>
<%= asset_link("bootstrap") %>
<%= asset_link("application.css") %>
<link href='/css/editor.css' rel='stylesheet' type='text/css' />
<script src="/js/editor.pb.js"></script>
<script src="/js/editor.pb.book.js"></script>
<script src="/js/editor.pb.page.js"></script>
<script src="/js/editor.pb.photos.js"></script>
<script src="/js/editor.gui.js"></script>
<script src="/js/editor.gui.events.js"></script>
<script src="/js/editor.gui.popup.js"></script>
<%= asset_link("editor.gui.manipulators.js") %>
<%= asset_link("newpage.js") %>

<style type="text/css">
#backgroundPicker {
	overflow: auto;
	max-height: 160px;
}
#backgroundPicker li {
	display: inline-block;
	list-style-type: none;
}
#layoutPicker {
	overflow: auto;
}
#layoutPicker li {
	display: inline-block;
	list-style-type: none;
	margin-left: 10px;
}
#framePicker {
}
#framePicker li {
	position: relative;
	display: inline-block;
	list-style-type: none;
	margin: 8px;
}
#framePicker li img {
	position: absolute;
}
.design-book-page-left {
	transform: scale(1.0);
	-webkit-transform: scale(1.0);
}
</style>
<script type="text/javascript">

var BlankPage = {
	width: 768,
	height: 512,
	assets: [],
	assetData: {},
	backgroundId: null,
	backgroundData: null,
	layoutId: null,
	layoutData: null,
	hasLayout: false
}

var book = PB.Book.blank();
var currentPage = book.insertRoughPage(-1);

var Controller = {
	init: function() {

		currentPage.setLayout('theme://base/layouts/gridLayout');
		currentPage.setBackground('theme://base/backgrounds/cssBackground');
		this.addPhoto();
		this.addText("little text");
		this.addText("Very big text\nHas a newline too!")
		this.setLayout('theme://experimental/layouts/framedLayout');
		this.showPage();
		this.initBackPicker();
		this.updateFramePicker();
	},
	initBackPicker: function() {
		var backs = [
		{ id: 'theme://base/backgrounds/cssBackground',
			name: 'Default'
		},
		{ id: 'theme://base/backgrounds/cssBackground',
			name: 'Yellow',
			data: {
				css: {backgroundColor: 'yellow'}
			}
		},
		{ id: 'theme://base/backgrounds/cssBackground',
			name: 'Rainbow',
			data: {
				css: {background: 'linear-gradient(red, yellow, orange, green, blue, purple)'}
			}
		}
		];
		function assignCb($el, id, data) {
			$el.hammer().on('touch', {}, function() {
				Controller.setBackground(id, data);
			});
		}
		for (var i=0; i<backs.length; i++) {
			var b = ThemeCache.resource(backs[i].id);
			var $li = $('<li>').css({
				width: 100,
				height: 100
			});
			b.fillBackground($li, backs[i].data, {});
			$('#backgroundPicker').append($li);
			assignCb($li, backs[i].id, backs[i].data);
		};
	},
	updateLayoutPicker: function() {
		$('#layoutPicker').children().remove();
		var layouts = [
		{ id: 'theme://base/layouts/gridLayout',
		},
		{ id: 'theme://base/layouts/gridSpacedLayout',
			data:  {spaceOffset: 10}
		},
		{ id: 'theme://base/layouts/gridSpacedLayout',
			data:  {spaceOffset: 20}
		},
		{ id: 'theme://experimental/layouts/framedLayout',
			data:  {frameWidth: 10}
		}
		];
		function assignCb($el, id, data) {
			$el.hammer().on('touch', {}, function() {
				Controller.setLayout(id, data);
			});
		};
		for (var i=0; i<layouts.length; i++) {
			var icon = currentPage.layoutIcon(layouts[i].id, layouts[i].data, 192);
			var $li = $(document.createElement('li'));
			$li.append(icon);
			$('#layoutPicker').append($li);
			assignCb($li, layouts[i].id, layouts[i].data);
		}
	},
	updateFramePicker: function() {
		$('#framePicker').children().remove();
		var frames = [
		{ id: 'theme://base/frames/cssFrame',
			data: {},
			offset: [0, 0, 0, 0]
		},
		{ id: 'theme://base/frames/cssFrame',
			data: {
				css: {
					backgroundColor: 'blue'
				}
			},
			offset: [10, 10, 10, 10]
		},
		{ id: 'theme://base/frames/cssFrame',
			data: {
				css: {
					background: 'linear-gradient(red, yellow, orange, green, blue, purple)'
				}
			},
			offset: [5, 3, 10, 20]
		},
		{ id: 'theme://base/frames/cssFrame',
			data: {
				css: {
					backgroundColor: '#9400d3',
					boxShadow: '5px 5px 5px rgba(148,0,211,0.3)'
				}
			},
			offset: [2, 2, 2, 2]
		}
		];
		var ICON_WIDTH = 50;
		var ICON_HEIGHT = 50;
		var ThemeUtils = ThemeCache.resource('theme://base/utilities');

		function assignCb($el, frameId, frameData, frameOffset) {
			$el.hammer().on('touch', {}, function() {
				PB.PageSelection.forEach(function(page, itemId) {
					var assetData = page.getAssetData(itemId);
					assetData.frameId = frameId;
					assetData.frameData = frameData;
					assetData.frameOffset = frameOffset;
					page.updateAssetData(itemId, assetData, {clobber: true});
				});
			});
		};

		for (var i=0; i<frames.length; i++) {
			var f = ThemeCache.resource(frames[i].id);
			var $li = $('<li>');

			var $frameDiv = $('<div>').css({
				width: ICON_WIDTH,
				height: ICON_HEIGHT
			});
			f.fillFrame($frameDiv, frames[i].offset, frames[i].data, {});

			var offset = ThemeUtils.canonicalFrameWidth(frames[i].offset);
			var imgRect = new GUI.Rect({width: ICON_WIDTH, height: ICON_HEIGHT});
			imgRect = imgRect.inset(offset);
			$img = $('<img>');
			$img.attr('src', PB.FillerPhotos.randomH(0).url)
				.css({
					top: imgRect.top,
					left: imgRect.left,
					width: Math.max(10, imgRect.width),
					height: Math.max(10, imgRect.height)
				});
			$li.append($frameDiv);
			$li.append($img);
			$('#framePicker').append($li);
			assignCb($li, frames[i].id, frames[i].data, frames[i].offset);
		}
	},
	showPage: function() {
		var options = {
			editable: $('#editable').prop('checked'),
			syncable: $('#syncable').prop('checked')
		};
		var dom = currentPage.generateDom(options);
		$('.design-book-page-left').children().remove();
		$('.design-book-page-left').append(dom);
		this.updateLayoutPicker();
	},
	addPhoto: function() {
		currentPage.addPhoto(PB.FillerPhotos.random().id);
		this.updateLayoutPicker();
	},
	removePhoto: function() {
		PB.PageSelection.getActiveSelections().forEach(function(pageSel) {
			pageSel.selection.forEach(function(itemId) {
				pageSel.bookPage.removeAsset(itemId);
			});
			pageSel.setSelection();
		});
		this.updateLayoutPicker();
	},
	words: ["one", "two", "and a much longer three, how much longer i am not sure"],
	addText: function(text) {
		var word = text;
		if (word === undefined) {
			word = this.words.shift();
			this.words.push(word);
		}
		currentPage.addText(word);
		this.updateLayoutPicker();
	},
	setLayout: function(layoutId, layoutData) {
		currentPage.setLayout(layoutId, layoutData);
	},
	setBackground: function(backgroundId, backgroundData) {
		currentPage.setBackground(backgroundId, backgroundData);
	},
}
$(document).ready(function() {
	Controller.init();
//	$(document.body).css('background', 'linear-gradient(45deg, red, blue)');
});

</script>
<body>
	<label for='editable'>Editable <input type='checkbox' id='editable' checked onClick='Controller.showPage()'/></label>
	<label for='syncable'>syncable <input type='checkbox' id='syncable' checked onClick='Controller.showPage()'/></label>
	<button onclick="Controller.addPhoto()">Add photo</button>
	<button onclick="Controller.removePhoto()">Remove photo</button>
	<button onclick="Controller.addText()">Add text</button>
	<br>
	<p>Layouts:</p>
	<ul id='layoutPicker'>
	</ul>
	<p>Backgrounds:</p>
	<ul id='backgroundPicker'>
	</ul>
	<p>Frames</p>
	<ul id='framePicker'>
	</ul>
	<div class='design-book-page-left' ></div>
</body>
