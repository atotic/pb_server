<html>
<head>
<title>PageDesign Mockup</title>

<%= asset_link("application.css") %>
<%= asset_link("jquery.js", "application.js") %>
<%= asset_link("gradients.js") %>
<%= asset_link("jquery.hammer.js") %>
<%= asset_link("jquery.dataSelector.js") %>
<%= asset_link("bootstrap") %>

<link href='/css/editor.css' rel='stylesheet' type='text/css' />
<script src="/js/editor.pb.js"></script>
<script src="/js/editor.gui.js"></script>
<%= asset_link("newpage.js") %>
<style type="text/css">
#backgroundPicker {
	overflow: auto;
	max-height: 160px;
}
#backgroundPicker li {
	display: inline-block;
	list-style-type: none;
}
#layoutPicker {
	overflow: auto;
}
#layoutPicker li {
	display: inline-block;
	list-style-type: none;
}
</style>
<script type="text/javascript">

var BlankPage = {
	width: 768,
	height: 512,
	assets: [],
	assetData: {},
	backgroundId: null,
	backgroundData: null,
	layoutId: null,
	layoutData: null,
	hasLayout: false
}

var Book = {};
var currentPage = new BookPage(Book, BlankPage);
var Controller = {
	init: function() {

		currentPage.setLayout('theme://base/layouts/gridLayout');
		currentPage.setBackground('theme://base/backgrounds/cssBackground');
		this.addPhoto();
		this.initBackPicker();
	},
	initBackPicker: function() {
		var backs = [
		{ id: 'theme://base/backgrounds/cssBackground',
			name: 'Default'
		},
		{ id: 'theme://base/backgrounds/cssBackground',
			name: 'Yellow',
			data: {
				css: {backgroundColor: 'yellow'}
			}
		},
		{ id: 'theme://base/backgrounds/cssBackground',
			name: 'Red',
			data: {
				css: {backgroundColor: 'red'}
			}
		}
		];
		function assignBackCb($el, id, data) {
			$el.hammer().on('touch', {}, function() {
				Controller.setBackground(id, data);
			});
		}
		for (var i=0; i<backs.length; i++) {
			var b = ThemeCache.resource(backs[i].id);
			var $li = $('<li>').css({
				width: 100,
				height: 100
			});
			b.fillBackground($li, backs[i].data, {});
			$('#backgroundPicker').append($li);
			assignBackCb($li, backs[i].id, backs[i].data);
		};
	},
	updateLayoutPicker: function() {
		$('#layoutPicker').children().remove();
		var layouts = [
		{ id: 'theme://base/layouts/gridLayout',
		},
		{ id: 'theme://base/layouts/gridSpacedLayout',
			data:  {spaceOffset: 10}
		},
		{ id: 'theme://base/layouts/gridSpacedLayout',
			data:  {spaceOffset: 20}
		},
		{ id: 'theme://experimental/layouts/framedLayout',
			data:  {frameWidth: 10}
		}
		];
		function assignLayoutCb($el, id, data) {
			$el.hammer().on('touch', {}, function() {
				Controller.setLayout(id, data);
			});
		};
		for (var i=0; i<layouts.length; i++) {
			var icon = currentPage.layoutIcon(layouts[i].id, layouts[i].data, 192);
			var $li = $(document.createElement('li'));
			$li.append(icon);
			$('#layoutPicker').append($li);
			assignLayoutCb($li, layouts[i].id, layouts[i].data);
		}
	},
	showPage: function() {
		var options = {
			editable: $('#editable').prop('checked'),
			syncable: $('#syncable').prop('checked')
		};
		var dom = currentPage.generateDom(options);
		$('.design-book-page-left').children().remove();
		$('.design-book-page-left').append(dom);
		this.updateLayoutPicker();
	},
	addPhoto: function() {
		var	photoUrls = ["h1.png", "h2.png", "h3.png", "h4.png", "h5.png", "h6.png", "v1.png", "v2.png", "v3.png", "v4.png"];
		var url = '/img/' + photoUrls[Math.floor(Math.random() * photoUrls.length)];
		currentPage.addPhoto(PhotoPlaceholder.random().id);
		currentPage.layoutFromDesign();
		this.showPage();
	},
	words: ["one", "two", "and a much longer three, how much longer i am not sure"],
	addText: function() {
		var word = this.words.shift();
		this.words.push(word);
		currentPage.addText(word);
		currentPage.layoutFromDesign();
		this.showPage();
	},
	setLayout: function(layoutId, layoutData) {
		currentPage.setLayout(layoutId, layoutData);
		currentPage.layoutFromDesign();
		this.showPage();
	},
	setBackground: function(backgroundId, backgroundData) {
		currentPage.setBackground(backgroundId, backgroundData);
		this.showPage();
	},
}
$(document).ready(function() {
	Controller.init();
//	$(document.body).css('background', 'linear-gradient(45deg, red, blue)');
});

</script>
<body>
	<label for='editable'>Editable <input type='checkbox' id='editable' checked onClick='Controller.showPage()'/></label>
	<label for='syncable'>syncable <input type='checkbox' id='syncable' onClick='Controller.showPage()'/></label>
	<button onclick="Controller.addPhoto()">Add photo</button>
	<button onclick="Controller.removePhoto()">Remove photo</button>
	<button onclick="Controller.addText()">Add text</button>
	<br>
	<p>Layouts:</p>
	<ul id='layoutPicker'>
	</ul>
	<button onclick="Controller.setLayout('theme://base/layouts/gridLayout')">Set gridLayout</button>
	<button onclick="Controller.setLayout('theme://base/layouts/gridSpacedLayout', {spaceOffset: 10})">Set GridSpacedLayout 10</button>
	<button onclick="Controller.setLayout('theme://base/layouts/gridSpacedLayout', {spaceOffset: 20})">Set GridSpacedLayout 20</button>
	<button onclick="Controller.setLayout('theme://experimental/layouts/framedLayout', {frameWidth: 10})">Set layout with frames 20</button>
	<p>Backgrounds:</p>
	<ul id='backgroundPicker'>
	</ul>
	<div class='design-book-page-left'></div>
</body>
