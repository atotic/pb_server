POOK.IO
Part One of the Total Rewrite is finished,
and it looks very good.
Speed, simplicity, Bootstrap, jsdiffs, bindings
all very good.

Code is clean,
new features fit snuggly,
as they should,
it is a total rewrite

One step left before part one
is done
That one step reveals cracks
in my simple UI
Three words won't fit in 200 pixels

Some were lit on fire
shortly after we were born
the fire continues
even when standing still

Braindumps help

So here is my braindump

Remaining tasks:
- templates
- user experience

Templates:
Design master templates. Master templates cover all book sizes.
Functionality:
- transform page metadata into HTML
- provide UI to modify the HTML & metadata

User experience:
Continue to keep it simple.
Printing same book at multiple resolutions will be uncommon, support multiple resolutions supported through book cloning.

Big themes:
Several target audiences:
- template designers
  community
- print shops
  why do they want our site?
  we offer functionality they cannot get anywhere else:
  - runs in browser, true sharing
  not competitive, we only do photobooks sw
  fight in-store photobook competition
  opportunity to expand the market with custom templates (partner for conferences,
  resorts, tourism experiences)
- users
  simplest, fastest way to create photo books, only ones with true sharing
  only true browser-only solution
  widest selection of templates
  ability to really customize their books
  community for inspiration
  print same book at multiple sizes (one for grandma, travel, etc).

Detailed book creating workflow:
I need this to design the full UI. Once I have templates, we have complete workflow



Rough tools:
DND used for image placement, photo adds, etc
visible
- add photo
- add page
- trash
- resize image/work area
toolbox
sort by date added, date taken, name
image sizes S M L
rough page sizes S M L

Functionlettes:
Assign style/
Order book
My books page
- book rename
- book clone
Account page

TODOs
split user pages into account/books/inspiration












DND interactions

ImageList -> RoughPage
ImageList -> Remove
RoughPage -> Move
RoughPage -> Remove
RoughPageTile -> RoughPage (Move)
RoughPageTile -> Remove
RoughPageTile -> ImageList (Removes)
AddButton -> RoughPage (Add)

June 11 design notes

# Original design notes: UI, the new architecture

3 platforms: PC, iPhone, iPad

## Current setup

Book has:

* list of images (as :book_pages table)
* list of pages (key on page object, ordered by :page_order attribute, )

	* page has :html, :icon, :width, :height

* template pointer

Images are tricky. On file upload, the url points to local file until upload completes. imgsrc's are then patched to point to server image (icons and html)

Page load: CSS prefixes are patched
Page save: Patches IMG src, removes drag/drop and other artifacts
Printing: img src patched. Would need background, etc.

Missing parts:

* transforming template from one style to another
* templates were images + text only, no backgrounds, frames, etc

## UI 2.0 changes

Page is no longer primarily viewed in WYSIWYG mode. We have 3 main modes:

* rough: visual representation of assets
* display_html
* print_html

rough contains raw materials that template transforms into display_html

Transformations are:

* rough + template -> display_html
* display_html + template -> print_html
* rough + new_template + old_template + display_html -> new_display_html

What is a page in new architecture?

User drags pictures between rough pages, arranging them in order.
User drags pages, rearranging them.
User creates text, rearranging it.
User goes into visual mode, tweaking the html: move/resize picture|text

What is a template?

* page html generators
* backgrounds
* frames
* gadgets

States:
Book starts off with no images, just a template

Data structures

###`Book`

FUNCTIONALITY

* Keep sorted list of images
* Keep sorted list of pages

DATA

* :images (many_to_many :images)
* :image_order attribute
* :pages (one_to_many :books)
* :page_order attribute

###`Page`

# The Key

the key to UI2.0 are the templates. Everything else is a known quantity.

Templates: dynamically reconfigure themselves
