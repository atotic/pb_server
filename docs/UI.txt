June 11 design notes
- want to implement complete rough editing functionality + sharing
- what happens with images.

book_talk:
book_json:
	title:

	photo_list: [list of photo_id] // image info might be loaded on demand
	photos {
		photo_id: { photo_json}
	}

	rough_page_list [list of rough_page_id]  // rough pages in order,
	// first four are cover, front_flap, back_flap, back, cannot be deleted, changed
	rough_pages {
		rough_page_id: { rough_page_json }
	}

	photo_db

book_api: // start with all page mods go through book API
	getPageNumber(rough_page_id)
	addPhotoFromLocalFile()
		- creates an upload_task
		- inserts new image

rough_page_json:
	_book: pointer to book
	id:
	photo_list: [list of photo_id]
	html: { page html encoded as json}

rough_page_api
	getDisplayHTML

photo_talk:
	photos are uploaded
	when image is created, we want to embed it in the book immediately
		before embedding, image is rotated

photo_json
	_book: pointer to book
	id: photo_id
	name:	// inits to file name
	caption:
	date:
	width:
	height:
	md5:
	upload_task:

photo_api:
	getUrl(size) // for local images, this might be deferred

upload_task
	upload_task is created when photo is getting uploaded


# Original design notes: UI, the new architecture

3 platforms: PC, iPhone, iPad

## Current setup

Book has:

* list of images (as :book_pages table)
* list of pages (key on page object, ordered by :page_order attribute, )

	* page has :html, :icon, :width, :height

* template pointer

Images are tricky. On file upload, the url points to local file until upload completes. imgsrc's are then patched to point to server image (icons and html)

Page load: CSS prefixes are patched
Page save: Patches IMG src, removes drag/drop and other artifacts
Printing: img src patched. Would need background, etc.

Missing parts:

* transforming template from one style to another
* templates were images + text only, no backgrounds, frames, etc

## UI 2.0 changes

Page is no longer primarily viewed in WYSIWYG mode. We have 3 main modes:

* rough: visual representation of assets
* display_html
* print_html

rough contains raw materials that template transforms into display_html

Transformations are:

* rough + template -> display_html
* display_html + template -> print_html
* rough + new_template + old_template + display_html -> new_display_html

What is a page in new architecture?

User drags pictures between rough pages, arranging them in order.
User drags pages, rearranging them.
User creates text, rearranging it.
User goes into visual mode, tweaking the html: move/resize picture|text

What is a template?

* page html generators
* backgrounds
* frames
* gadgets

States:
Book starts off with no images, just a template

Data structures

###`Book`

FUNCTIONALITY

* Keep sorted list of images
* Keep sorted list of pages

DATA

* :images (many_to_many :images)
* :image_order attribute
* :pages (one_to_many :books)
* :page_order attribute

###`Page`

# The Key

the key to UI2.0 are the templates. Everything else is a known quantity.

Templates: dynamically reconfigure themselves
