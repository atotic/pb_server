See pb_chrome/docs/linux_install for cold deployment script
Keeping servers up:
check out http://michaelvanrooijen.com/articles/2011/06/08-managing-and-monitoring-your-ruby-application-with-foreman-and-upstart/
10 mil hits a day on the cheap http://www.ewanleith.com/blog/900/10-million-hits-a-day-with-wordpress-using-a-15-server, also firewall config
Eventualy, move all server start/stop stuff to upstart

PRODUCTION setup
nginx server: 
	installed in /opt/nginx
	configured via /opt/nginx/conf/nginx.conf
	runs as nginx/nginx
	/etc/init.d/nginx start/stop/restart
comet, pdf_saver_server, delayed_job
	git installed in /home/deploy/pb/pb_server
	conf files in /home/deploy/pb/pb_server/config

BINARIES
chrome custom build, checked into pb_chrome/bin -- chromium built with pageCapture.saveAsPDF patch
pdftk -- pdf toolkit, for merging pdf pages
xvfd -- for running headless chrome
imagemagick - for auto-orient
graphicsmagick - for image resizing
growl, growlnotify -- development only, growl errors in logs

SERVERS
sveg -- main application server, 26000
delayed_job -- pdf generation, image resizing, etc
chromium -- custom chromium, converts html -> pdf
pdf_saver_server -- interface to custom chromium, 27000
comet -- broadcast protocol, 28000
nginx -- front end server
database -- mysql on production

SERVER DETAILS
	all servers have ./script/<server_name> with argument start/stop/debug/restart
	pids are in data_dir/tmp

chromium:
	profile dir is <root>/chromium_profile
	runs pdf_saver_extension that polls pdf_saver_server for work. Turns HTML to PDFs

delayed_job:
	does pdf generation, image resizing
	logs to delayed_job.log (hardcoded in gem)
	
pdf_saver_server:
	ChromePDFTask server for chromium. Allocates ChromePDFTasks created by delayed_job, 
	reports job results from Chromium. 
	Monitors chromium, restarts it if hangup detected
	Logs to pdf_saver_server.info.

LOGGING
  Logs are in data_dir/log
	Each server has up to three logs:
		<server_name>.log: http access log
		<server_name>.info: LOGGER.info|error|warn output
		<server_name>.stdout: stdout|stderr redirects
	
NGINX
nginx -c /Users/atotic/code/pb/pb_server/config/nginx.conf -s start	
# reloads the conf file
nginx -c /Users/atotic/code/pb/pb_server/config/nginx.conf -s reload



CHROME deployment:

http://www.kalzumeus.com/2010/01/15/deploying-sinatra-on-ubuntu-in-which-i-employ-a-secretary/
http://pemberthy.blogspot.com/2009/02/deploying-sinatra-applications-with.html
http://blog.sosedoff.com/2009/07/04/how-to-deploy-sinatra-merb-applications-with-nginx/


